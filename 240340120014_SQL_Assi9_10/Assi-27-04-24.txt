

mysql> create procedure find_fact(in num int)
    -> begin
    -> declare count int default num;
    ->     declare result int default 1;
    ->     while count > 1 do
    -> set result = result * count;
    ->         set count = count - 1;
    ->
    -> end while;
    -> select result;
    -> end $
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call find_fact(10);
+---------+
| result  |
+---------+
| 3628800 |
+---------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.02 sec)

mysql> delimiter $
mysql> create procedure sum_digits(in num int)
    -> begin
    ->     declare count int default 0;
    ->     declare result int default 0;
    ->     while num > 0 do
    -> set count = num % 10;
    -> set result = result + count;
    ->         set num = num / 10;
    -> end while;
    -> select result;
    -> end $
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call sum_digits(12);
+--------+
| result |
+--------+
|      3 |
+--------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.05 sec)

mysql> delimiter $
mysql> create procedure fibon(in num int)
    -> begin
    ->     declare n1 int default 0;
    ->     declare n2 int default 1;
    ->     declare i int default 0;
    ->     declare temp int default 0;
    ->     declare result varchar(40) default '';
    ->     set result = concat(result,n1);
    -> set result = concat(result,',',n2);
    -> set result = concat(result,',');
    ->     while i < num do
    ->         set temp = n2;
    ->         set n2 = n1 + n2;
    ->         set n1 = temp;
    -> set result = concat(result,n2,',');
    ->         set i = i + 1;
    ->     end while;
    -> select result;
    -> end $
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call fibon(5);
+----------------+
| result         |
+----------------+
| 0,1,1,2,3,5,8, |
+----------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)


mysql> delimiter $
mysql> create procedure printeo(in num int)
    -> begin
    ->     declare i int default 1;
    ->     declare odds varchar(20) default '';
    ->     declare evens varchar(20) default '';
    ->     while i <= num do
    ->        if i % 2 = 0 then set evens = concat(evens,i,',');
    ->        else set odds = concat(odds,i,',');
    ->        end if;
    -> set i = i + 1;
    ->     end while;
    -> select odds, evens;
    -> end $
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> call printeo(10);
+------------+-------------+
| odds       | evens       |
+------------+-------------+
| 1,3,5,7,9, | 2,4,6,8,10, |
+------------+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE products (
    ->     product_id INT PRIMARY KEY,
    ->     product_type VARCHAR(50),
    ->     name VARCHAR(100),
    ->     cost DECIMAL(10, 2)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> INSERT INTO products (product_id, product_type, name, cost)
    -> VALUES
    ->     (1, 'ELE', 'Smartphone', 599.99),
    ->     (2, 'ELE', 'Phone', 19.99),
    ->     (3, 'FUR', 'Coffee Maker', 89.50),
    ->     (4, 'FUR', 'Bed', 12.75),
    ->     (5, 'STA', 'Science Fiction Novel', 29.95),
    ->     (6, 'STA', 'Pen', 79.00),
    ->     (7, 'ELE', 'Charger', 14.99),
    ->     (8, 'STA', 'Books', 49.50);
Query OK, 8 rows affected (0.01 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> delimiter &&
mysql> create function calcgst( pt varchar(3), cost int)
    -> returns decimal(10,2)
    -> deterministic
    -> begin
    -> declare total decimal(10,2);
    -> if pt = 'FUR' then
    ->        set total = cost *0.12 + cost;
    ->     elseif pt = 'ELE' then
    ->        set total = cost * 0.18 + cost;
    ->     elseif pt = 'STA' then
    ->        set total = cost * 0.6 + cost;
    ->     else
    ->        set total = cost;
    ->     end if;
    ->     return total;
    -> end &&
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> select *,calcgst(product_type,cost) as total from products;
+------------+--------------+-----------------------+--------+--------+
| product_id | product_type | name                  | cost   | total  |
+------------+--------------+-----------------------+--------+--------+
|          1 | ELE          | Smartphone            | 599.99 | 708.00 |
|          2 | ELE          | Phone                 |  19.99 |  23.60 |
|          3 | FUR          | Coffee Maker          |  89.50 | 100.80 |
|          4 | FUR          | Bed                   |  12.75 |  14.56 |
|          5 | STA          | Science Fiction Novel |  29.95 |  48.00 |
|          6 | STA          | Pen                   |  79.00 | 126.40 |
|          7 | ELE          | Charger               |  14.99 |  17.70 |
|          8 | STA          | Books                 |  49.50 |  80.00 |
+------------+--------------+-----------------------+--------+--------+
8 rows in set (0.00 sec)

mysql> CREATE TABLE employees (
    ->   EMPLOYEE_ID decimal(6,0),
    ->   NAME varchar(20) DEFAULT NULL,
    ->   SALARY decimal(8,2) DEFAULT NULL,
    ->   DEPARTMENT varchar(50) NOT NULL,
    ->   AGE int DEFAULT NULL,
    ->   EXPERIENCE int DEFAULT NULL
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> -- Inserting Employee 1
mysql> INSERT INTO employees (EMPLOYEE_ID, NAME, SALARY, DEPARTMENT, AGE, EXPERIENCE)
    -> VALUES (101, 'John', 75000.00, 'Sales', 30, 5);
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> -- Inserting Employee 2
mysql> INSERT INTO employees (EMPLOYEE_ID, NAME, SALARY, DEPARTMENT, AGE, EXPERIENCE)
    -> VALUES (102, 'Jane', 80000.00, 'Marketing', 28, 4);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> -- Inserting Employee 3
mysql> INSERT INTO employees (EMPLOYEE_ID, NAME, SALARY, DEPARTMENT, AGE, EXPERIENCE)
    -> VALUES (103, 'Michael', 90000.00, 'Finance', 35, 8);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> -- Inserting Employee 4
mysql> INSERT INTO employees (EMPLOYEE_ID, NAME, SALARY, DEPARTMENT, AGE, EXPERIENCE)
    -> VALUES (104, 'Emily', 65000.00, 'HR', 27, 3);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> -- Inserting Employee 5
mysql> INSERT INTO employees (EMPLOYEE_ID, NAME,  SALARY, DEPARTMENT, AGE, EXPERIENCE)
    -> VALUES (105, 'David',  70000.00, 'IT', NULL, NULL);
Query OK, 1 row affected (0.00 sec)

mysql> delimiter &&
mysql> create function calcsalary( exp int, salary int)
    -> returns decimal(10,2)
    -> deterministic
    -> begin
    -> declare total decimal(10,2);
    -> if exp >= 3 and exp <8 then
    ->             set total = salary * 30 + salary * 5 + salary;
    ->         elseif exp >= 8 then
    ->             set total = salary * 50 + salary * 5 + salary;
    ->         else
    ->             set total = salary;
    ->         end if;
    ->     return total;
    -> end &&
Query OK, 0 rows affected (0.01 sec)

mysql> delimiter ;
mysql> select *,calcsalary(EXPERIENCE, SALARY) as total from employees;
+-------------+---------+----------+------------+------+------------+------------+
| EMPLOYEE_ID | NAME    | SALARY   | DEPARTMENT | AGE  | EXPERIENCE | total      |
+-------------+---------+----------+------------+------+------------+------------+
|         101 | John    | 75000.00 | Sales      |   30 |          5 | 2700000.00 |
|         102 | Jane    | 80000.00 | Marketing  |   28 |          4 | 2880000.00 |
|         103 | Michael | 90000.00 | Finance    |   35 |          8 | 5040000.00 |
|         104 | Emily   | 65000.00 | HR         |   27 |          3 | 2340000.00 |
|         105 | David   | 70000.00 | IT         | NULL |       NULL |   70000.00 |
+-------------+---------+----------+------------+------+------------+------------+
5 rows in set (0.00 sec)



