Today's  Topics

1. Revision
2. Packages , classpath n Access specifiers 
3. More practice of writing methods
(passing reference , returning reference)
4. Enter IDE
5. Arrays
-----------------------------

1. Revise through code 

Consider day2's Box class 
What will happen , if you write below code in main(...) method ?
Desc mem pic
Box b1;//ref var in stack
b1=new Box(1,2,3); //class loading , instance 
Box b2=new Box(4,5,6);//instance n ref var on the stack
b2=b1;//Are there any objs marked for GC ? yes , 2nd box : GC
b1=null;//Are there any additional objs marked for GC ? NO
b2=null;//Are there any additional objs marked for GC ? Yes , 1st box 
Box b3=new Box(10,20,30);
b3=new Box(11,21,31);//Are there any additional objs marked for GC ? yes , box(10,20,30) is marked for GC


2. Revise packages
Understand -  classpath n  access specifiers 
2.1 Refer to readme : regarding packages.txt
Answer this 
Why Packages ?
What is a package ?

eg : class Box : com.cdac.core
class TestBox : com.cdac.tester
To compile : <day3>/src
javac -d ..\bin com\cdac\tester\TestBox.java

cd ..\bin
java com.cdac.tester.TestBox : worked !

java TestBox : doesn't work

cd com\cdac\tester\

java TestBox : doesn't work (since it's a packaged class)

2.2 Refer : diagrams\Access specifiers.png 
 diagrams\understanding access specifiers
Write code samples to test it .

3. Box class under - com.cdac.core package.
Add TestBox class under -  com.cdac.tester package 


3.1  Create Cubes
eg : In TestBox 
sop("Enter side of a cube");
Box cube=new Box(sc.nextDouble());
What will be the changes you need to make in the Box class ?

Usage of this keyword
1. To un hide instance var from local var
eg : this.width=width;

2. To invoke the constructor of the same class , from another constructor
(constructor chaining)
syntax : this(constr args)


3.2 Add a method to Box class to check equality of 2 boxes & test it from the TestBox
Meaning : 2 boxes are same : iff dims are same

eg : In TestBox : 
sop("Enter box 1 dims") //10 20 30
Box b1=new Box(....);
sop("Enter box 2 dims") //20 10 30
Box b2=new Box(....);
sop(b1.isEqual(b2)); //invoker : b1    arg  : b2
//sop(b2.isEqual(b1));

3.3 Add a method to Box class to return a new Box with modified offset dims & test it with the tester.

eg : Box earlierBox=new Box(...);//10 20 30
sop("enter offsets in dims for creating new box w.r.t earlier box : wOff doff hoff");
If user supplies these offsets :  3 -4 5 
A new box object should be created with dims : 13 16 35
How will you call this method from the tester ????
Box newBox=earlierBox.createNewBox(offsets);

What will you add in the Box class ?
add a method

3.4 In the code below , are there any objs marked for GC ? YES
(newly created box is marked for GC)
In TestBox : 
earlierBox.createNewBox(wOff ,doff, hoff);

Add a method in Box class
void createNewBox(double wOff ,double doff, double hoff)
{
  //this : earlierBox
  Box myBox=new Box(this.width+wOff,this.width+dOff,this.width+dOff);
 }

Trigger for the object to be marked for GC
1. nullifying all refs.
2. re assigning the ref to new object
3. Creating an object within the method n NOT returning it's reference to the caller.
refer : above example (createNewBox)




4. Enter Arrays 
refer - "day3_help\readmes\Regarding Arrays.txt"
4.1 Create Array of primitive types

Objective - Accept no of data samples(of type double) from User(using scanner)
Create suitable array & display it using for-loop , to confirm default values.

Accept data from User(scanner) & store it in the array.
Display array data using  for loop.



Display array data using for-each loop

for-each loop(enhanced for loop)
syntax - 
for (type var : array) 
{ 
    statements using var;
}

eg : double[] data=new double[10];
for (double d : data)//d=data[0],d=data[1].....d=data[data.length-1]
 sop(d);







Solve -  Display array data using for-each loop

Important statement
for-each loop Works on a copy of array element.

for-each limitations
1. Can only iterate from 1st elem to last elem , with step size +1
2. Works on a copy of array elems
(can't be used for modifying array elems).


4.2 Array of references

Create a new tester class  : TestBoxArray in package  "com.cdac.tester"

Objectives 
 1. Ask user(client) , to place the order size (i.e how many boxes to make )
Accept individual Box dims n display box dims n volume from a single for-each loop.
eg : sop("Enter no of boxes");
Box[] boxes=new Box[sc.nextInt()];//4
for(int i=0;i<boxes.length;i++)
{
  sop("Enter box dims : w d h");
  boxes[i]=new Box(sc.nextDouble(),sc.nextDouble(),sc.nextDouble());
}
//10 20 30 , 1 2 3 , 4,5,6  7,8,9
for (Box b : boxes) //b=boxes[0], b=boxes[1]....b=boxes[3]
{
  sop(b.getBoxDims());
  sop(b.getVolume());
}
//no objs yet marked for GC
boxes=null;

2. Double box width for all boxes having volume > 100.(Can you use for-each & solve this????)
(lab work)